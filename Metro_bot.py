import requests
from telegram.ext import Updater, MessageHandler, Filters, ConversationHandler
from account import TOKEN
from telegram.ext import CallbackContext, CommandHandler


class User:
    name = None
    bullets = 0
    food = 0

    trade_item_1 = 0
    trade_item_2 = 0
    trade_item_3 = 0
    trade_item_4 = 0

    costume = 0
    weapon = 0


def info(update, context):
    update.message.reply_text(
        "–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É: /start")


def main():
    updater = Updater(TOKEN, use_context=True)

    dp = updater.dispatcher

    text_handler = MessageHandler(Filters.text, info)

    conv_handler = ConversationHandler(
        entry_points=[CommandHandler('start', start)],

        states={
            1: [MessageHandler(Filters.text, start_choose)],
            1.1: [MessageHandler(Filters.text, start)],
            2: [MessageHandler(Filters.text, inventory)],
            3: [MessageHandler(Filters.text, stop)]
        },

        fallbacks=[CommandHandler('stop', stop)]
    )

    dp.add_handler(conv_handler)

    dp.add_handler(text_handler)
    updater.start_polling()

    updater.idle()


def start(update, context):
    update.message.reply_text(
        "‚≠ê–ù–∞—á–∞–ª–æ‚≠ê")
    update.message.reply_text(
        "–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ—ë –∏–º—è:")
    User.bullets = 250
    User.food = 15

    return 1


def inventory(update, context):
    update.message.reply_text(
        f"–í–∞—à–µ –∏–º—è: {User.name} üßç\n"
        f"–í–∞—à–∏ –ø–∞—Ç—Ä–æ–Ω—ã: {User.bullets} üî´\n"
        f"–í–∞—à –∑–∞–ø–∞—Å –µ–¥—ã: {User.food} üçñ\n"
        "\n"
        "–í–∞—à–∏ –ø—Ä–µ–¥–º–µ—Ç—ã –¥–ª—è –±–∞—Ä—Ç–µ—Ä–∞: ‚ôº\n"  
        f"–ö–∏—Å–ª–∏–∫: {User.trade_item_1} üçÑ\n"
        f"–¢—É–Ω–µ–ª—å–Ω—ã–π –∫–∞–º–µ–Ω—å: {User.trade_item_2} üßº\n"
        f"–†–∂–∞–≤–∞—è —Ç—Ä–∞–≤–∞: {User.trade_item_3} üåø\n"
        f"–ö–µ—Ä–æ—Å–∏–Ω: {User.trade_item_4} üõ¢")


def repeater(update, context):
    update.message.reply_text(
        "–û—à–∏–±–∫–∞!!!")
    update.message.reply_text(
        "–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ—ë –∏–º—è:")


def start_choose(update, context):
    User.name = update.message.text
    inventory(update, context)
    geocoder(update, context)
    update.message.reply_text(
        "–í—ã –≥–æ—Ç–æ–≤—ã –Ω–∞—á–∏–Ω–∞—Ç—å?")
    return 3


def stop(update, context):
    update.message.reply_text("–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞, —Å–ø–∞—Å–∏–±–æ –∑–∞ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ —Å–∞–º–æ–π –ø–µ—Ä–≤–æ–π –¥–µ–º–∫–∏)))")
    return ConversationHandler.END


def geocoder(update, context):
    geocoder_uri = "http://geocode-maps.yandex.ru/1.x/"
    response = requests.get(geocoder_uri, params={
        "apikey": "40d1649f-0493-4b70-98ba-98533de7710b",
        "format": "json",
        "geocode": update.message.text
    })

    toponym = response.json()["response"]["GeoObjectCollection"][
        "featureMember"][0]["GeoObject"]

    static_api_request = f"http://static-maps.yandex.ru/1.x/?ll=30.315721,59.971093&spn=0.5,0.5&l=map&pt=30.411310,59.929214,pm2rdl"
    context.bot.send_photo(
        update.message.chat_id,  # –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞. –ö—É–¥–∞ –ø–æ—Å—ã–ª–∞—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É.
        # –°—Å—ã–ª–∫–∞ –Ω–∞ static API, –ø–æ —Å—É—Ç–∏, —Å—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫—É.
        # –¢–µ–ª–µ–≥—Ä–∞–º—É –º–æ–∂–Ω–æ –ø–µ—Ä–µ–¥–∞—Ç—å –ø—Ä—è–º–æ –µ—ë, –Ω–µ —Å–∫–∞—á–∏–≤–∞—è –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ –∫–∞—Ä—Ç—É.
        static_api_request,
        caption='–í—ã –Ω–∞—á–∏–Ω–∞–µ—Ç–µ –∏–≥—Ä—É –Ω–∞ —Å—Ç–∞–Ω—Ü–∏–∏: –ù–æ–≤–æ—á–µ—Ä–∫–∞—Å—Å–∫–∞—è'
    )


if __name__ == '__main__':
    main()
