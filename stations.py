import requests
from telegram.ext import ConversationHandler
from telegram import ReplyKeyboardMarkup


reply_keyboard_novocherkasskaya = [['–ü–æ–π—Ç–∏ –∫ —Ç–æ—Ä–≥–æ–≤—Ü—É', '–í—ã–π—Ç–∏ —Å–æ —Å—Ç–∞–Ω—Ü–∏–∏'], ['–û—Å–º–æ—Ç—Ä–µ—Ç—å –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å', '–õ–µ—á—å —Å–ø–∞—Ç—å'],
                                   ['–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞—Ä—Ç—É']]
markup_novocherkasskaya = ReplyKeyboardMarkup(reply_keyboard_novocherkasskaya, one_time_keyboard=False)


class User:
    name = None

    health = 0
    armor = 0

    bullets = 0
    food = 0

    trade_item_1 = 0
    trade_item_2 = 0
    trade_item_3 = 0
    trade_item_4 = 0

    costume = 0
    weapon = 0


def inventory(update, context):
    update.message.reply_text(
        f"–í–∞—à–µ –∏–º—è: {User.name} üßç\n"
        f"–í–∞—à–µ –∑–¥–æ—Ä–æ–≤—å–µ: {User.health} ‚ô•\n"
        f"–í–∞—à–∞ –±—Ä–æ–Ω—è: {User.armor} üõ°\n"
        "\n"
        f"–í–∞—à–∏ –ø–∞—Ç—Ä–æ–Ω—ã: {User.bullets} üî´\n"
        f"–í–∞—à –∑–∞–ø–∞—Å –µ–¥—ã: {User.food} üçñ\n"
        "\n"
        "–í–∞—à–∏ –ø—Ä–µ–¥–º–µ—Ç—ã –¥–ª—è –±–∞—Ä—Ç–µ—Ä–∞: ‚ôº\n"  
        f"–ö–∏—Å–ª–∏–∫: {User.trade_item_1} üçÑ\n"
        f"–¢—É–Ω–µ–ª—å–Ω—ã–π –∫–∞–º–µ–Ω—å: {User.trade_item_2} üßº\n"
        f"–†–∂–∞–≤–∞—è —Ç—Ä–∞–≤–∞: {User.trade_item_3} üåø\n"
        f"–ö–µ—Ä–æ—Å–∏–Ω: {User.trade_item_4} üõ¢")


def sleep(update, content):
    update.message.reply_text("–í–æ –≤—Ä–µ–º—è —Å–Ω–∞ –≤—ã –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ –≤—Å—ë —Å–≤–æ—ë –∑–¥–æ—Ä–æ–≤—å–µ.")
    User.health = 100


def novocherkasskaya(update, context):
    novocherkasskaya_choice_check(update, context)
    if update.message.text == '–ù–µ—Ç':
        update.message.reply_text("–ù—É –∏ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞! –ù—É –∏ –Ω–µ –Ω—É–∂–Ω–æ! –ù—É –∏ –æ—á–µ–Ω—å —Ç–æ –º–Ω–µ –Ω—É–∂–Ω–æ!")
        update.message.reply_text("–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞, —Å–ø–∞—Å–∏–±–æ –∑–∞ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ —Å–∞–º–æ–π –ø–µ—Ä–≤–æ–π –¥–µ–º–∫–∏)))")
        return ConversationHandler.END
    update.message.reply_text("–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –Ω–∞ —Å—Ç–∞–Ω—Ü–∏–∏: –ù–æ–≤–æ—á–µ—Ä–∫–∞—Å—Å–∫–∞—è.\n"
                              "–°—Ç–∞–Ω—Ü–∏—è –ø–æ–¥ –∫–æ–Ω—Ç—Ä–æ–ª–µ–º –û–∫–∫–µ—Ä–≤–∏–ª—å—Å–∫–æ–≥–æ –∞–ª—å—è–Ω—Å–∞.\n"
                              "–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?", reply_markup=markup_novocherkasskaya)


def novocherkasskaya_choice_check(update, context):
    choice = update.message.text
    if choice == reply_keyboard_novocherkasskaya[0][0]:
        trade_novocherkasskaya(update, context)
    elif choice == reply_keyboard_novocherkasskaya[1][0]:
        inventory(update, context)
    elif choice == reply_keyboard_novocherkasskaya[1][1]:
        sleep(update, context)
    elif choice == reply_keyboard_novocherkasskaya[2][0]:
        geocoder_novocherkasskaya(update, context, False)
    return 3


def geocoder_novocherkasskaya(update, context, caption):
    static_api_request = f"http://static-maps.yandex.ru/1.x/?ll=30.315721,59.971093&spn=0.5,0.5&l=map&pt=30.411310," \
                         f"59.929214,pm2rdl"
    if caption:
        context.bot.send_photo(
            update.message.chat_id,
            static_api_request,
            caption=f'–í—ã –Ω–∞—á–∏–Ω–∞–µ—Ç–µ –∏–≥—Ä—É –Ω–∞ —Å—Ç–∞–Ω—Ü–∏–∏: –ù–æ–≤–æ—á–µ—Ä–∫–∞—Å—Å–∫–∞—è.'
        )
    else:
        context.bot.send_photo(
            update.message.chat_id,
            static_api_request,
        )


def trade_novocherkasskaya(update, context):
    update.message.reply_text("–ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã–ª–∞ –±—ã—Ç—å —Ç–æ—Ä–≥–æ–≤–ª—è)))")


def alexander_nevsky_square_1(update, context):
    update.message.reply_text("–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –Ω–∞ —Å—Ç–∞–Ω—Ü–∏–∏: –ü–ª–æ—â–∞–¥—å –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–∞ –ù–µ–≤—Å–∫–æ–≥–æ 1.\n"
                              "–°—Ç–∞–Ω—Ü–∏—è –ø–æ–¥ –∫–æ–Ω—Ç—Ä–æ–ª–µ–º –ò–º–ø–µ—Ä–∏–∏ –í–µ–≥–∞–Ω.\n"
                              "–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?", reply_markup=markup_novocherkasskaya)

    return 7


def alexander_nevsky_square_2(update, context):
    update.message.reply_text("–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –Ω–∞ —Å—Ç–∞–Ω—Ü–∏–∏: –ü–ª–æ—â–∞–¥—å –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–∞ –ù–µ–≤—Å–∫–æ–≥–æ 2.\n"
                              "–°—Ç–∞–Ω—Ü–∏—è –ø–æ–¥ –∫–æ–Ω—Ç—Ä–æ–ª–µ–º –ò–º–ø–µ—Ä–∏–∏ –í–µ–≥–∞–Ω.\n"
                              "–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?", reply_markup=markup_novocherkasskaya)

    return 7


def mayakovskaya(update, context):
    update.message.reply_text("–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –Ω–∞ —Å—Ç–∞–Ω—Ü–∏–∏: –ù–æ–≤–æ—á–µ—Ä–∫–∞—Å—Å–∫–∞—è.\n"
                              "–°—Ç–∞–Ω—Ü–∏—è –ø–æ–¥ –∫–æ–Ω—Ç—Ä–æ–ª–µ–º –û–∫–∫–µ—Ä–≤–∏–ª—å—Å–∫–æ–≥–æ –∞–ª—å—è–Ω—Å–∞.\n"
                              "–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?", reply_markup=markup_novocherkasskaya)

    return 7
