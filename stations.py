import json
from random import random

from telegram import ReplyKeyboardMarkup

reply_keyboard_station = [['–í–∑—è—Ç—å –∑–∞–∫–∞–∑ –Ω–∞ –¥–æ—Å—Ç–∞–≤–∫—É', '–í—ã–π—Ç–∏ —Å–æ —Å—Ç–∞–Ω—Ü–∏–∏'],
                                   ['–û—Å–º–æ—Ç—Ä–µ—Ç—å –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å', '–ê—Ä–µ–Ω–¥–æ–≤–∞—Ç—å –¥–æ–º–∏–∫ –Ω–∞ –Ω–æ—á—å: 35 –ø–∞—Ç—Ä–æ–Ω–æ–≤'],
                                   ['–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞—Ä—Ç—É']]
markup_station = ReplyKeyboardMarkup(reply_keyboard_station, one_time_keyboard=True)

# –ü–µ—Ä–µ—Ö–æ–¥—ã –º–µ–∂–¥—É —Å—Ç–∞–Ω—Ü–∏—è–º–∏
reply_keyboard_tunnel_novocherkasskaya = [['–ü–ª–æ—â–∞–¥—å –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–∞ –ù–µ–≤—Å–∫–æ–≥–æ 1', '–ü–ª–æ—â–∞–¥—å –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–∞ –ù–µ–≤—Å–∫–æ–≥–æ 2']]
markup_tunnel_novocherkasskaya = ReplyKeyboardMarkup(reply_keyboard_tunnel_novocherkasskaya, one_time_keyboard=True)

reply_keyboard_tunnel_alexander_nevsky_square_1 = [['–ù–æ–≤–æ—á–µ—Ä–∫–∞—Å—Å–∫–∞—è', '–ü–ª–æ—â–∞–¥—å –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–∞ –ù–µ–≤—Å–∫–æ–≥–æ 2'], ['–ú–∞—è–∫–æ–≤—Å–∫–∞—è']]
markup_tunnel_alexander_nevsky_square_1 = ReplyKeyboardMarkup(reply_keyboard_tunnel_alexander_nevsky_square_1,
                                                              one_time_keyboard=True)

reply_keyboard_tunnel_alexander_nevsky_square_2 = [['–ù–æ–≤–æ—á–µ—Ä–∫–∞—Å—Å–∫–∞—è', '–ü–ª–æ—â–∞–¥—å –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–∞ –ù–µ–≤—Å–∫–æ–≥–æ 1'], ['–ú–∞—è–∫–æ–≤—Å–∫–∞—è']]
markup_tunnel_alexander_nevsky_square_2 = ReplyKeyboardMarkup(reply_keyboard_tunnel_alexander_nevsky_square_2,
                                                              one_time_keyboard=True)

reply_keyboard_tunnel_mayakovskaya = [['–ü–ª–æ—â–∞–¥—å –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–∞ –ù–µ–≤—Å–∫–æ–≥–æ 1', '–ü–ª–æ—â–∞–¥—å –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–∞ –ù–µ–≤—Å–∫–æ–≥–æ 2']]
markup_tunnel_mayakovskaya = ReplyKeyboardMarkup(reply_keyboard_tunnel_mayakovskaya, one_time_keyboard=True)

reply_tunnels_move = [['–ò–¥—Ç–∏ –¥–∞–ª—å—à–µ'], ['–ò—Å–∫–∞—Ç—å –º—É—Ç–∞–Ω—Ç–æ–≤ –≤ —Ç–µ—Ö. –ø–æ–º–µ—â–µ–Ω–∏—è—Ö', '–ò—Å–∫–∞—Ç—å –º–∞—Ä–æ–¥—ë—Ä–æ–≤ –≤ —Ç–µ—Ö. –ø–æ–º–µ—â–µ–Ω–∏—è—Ö']]
markup_tunnels_move = ReplyKeyboardMarkup(reply_tunnels_move, one_time_keyboard=True)


class User:
    def __init__(self, update, context):
        with open(f'main_hero{update.message.chat_id}.json', 'r') as f:
            data = json.load(f)
        self.name = data['name']

        self.health = data['health']
        self.armor = data['armor']
        self.attack = data['attack']

        self.bullets = data['bullets']
        self.food = data['food']

        self.trade_item_1 = data['trade_item_1']
        self.trade_item_2 = data['trade_item_2']
        self.trade_item_3 = data['trade_item_3']
        self.trade_item_4 = data['trade_item_4']

        self.costume = 0
        self.weapon = 0

        self.station = data['station']
        self.owner = data['owner']

    def inventory(self, update, context):
        update.message.reply_text(
            "–í–∞—à –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å: \n"
            "\n"
            f"üßç –í–∞—à–µ –∏–º—è: {self.name} üßç\n"
            f"‚ô• –í–∞—à–µ –∑–¥–æ—Ä–æ–≤—å–µ: {self.health} ‚ô•\n"
            f"üõ° –í–∞—à–∞ –±—Ä–æ–Ω—è: {self.armor} üõ°\n"
            f"üî™–í–∞—à —É—Ä–æ–Ω: {self.attack} üî™\n"
            "\n"
            f"üî´ –í–∞—à–∏ –ø–∞—Ç—Ä–æ–Ω—ã: {self.bullets} üî´\n"
            f"üçñ –í–∞—à –∑–∞–ø–∞—Å –µ–¥—ã: {self.food} üçñ\n"
            "\n"
            "‚ôº –í–∞—à–∏ –ø—Ä–µ–¥–º–µ—Ç—ã –¥–ª—è –±–∞—Ä—Ç–µ—Ä–∞: ‚ôº\n"
            f"üçÑ –ö–∏—Å–ª–∏–∫: {self.trade_item_1} üçÑ\n"
            f"üßº –¢—É–Ω–µ–ª—å–Ω—ã–π –∫–∞–º–µ–Ω—å: {self.trade_item_2} üßº\n"
            f"üåø –†–∂–∞–≤–∞—è —Ç—Ä–∞–≤–∞: {self.trade_item_3} üåø\n"
            f"üõ¢ –ö–µ—Ä–æ—Å–∏–Ω: {self.trade_item_4} üõ¢\n"
            f"\n"
            f"–¢–µ–∫—É—â–∞—è —Å—Ç–∞–Ω—Ü–∏—è: {self.station}")


class Station:
    def __init__(self, update, context):
        with open(f'main_hero{update.message.chat_id}.json', 'r') as f:
            data = json.load(f)
        self.station_name = data['station']
        self.owner = data['owner']

    def init_station(self, update, context):
        update.message.reply_text(f"–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –Ω–∞ —Å—Ç–∞–Ω—Ü–∏–∏: {self.station_name}.\n"
                                  f"–°—Ç–∞–Ω—Ü–∏—è –ø–æ–¥ –∫–æ–Ω—Ç—Ä–æ–ª–µ–º: {self.owner}.\n"
                                  f"–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?", reply_markup=markup_station)


def station_distributor(update, context):
    activities = {'–í–∑—è—Ç—å –∑–∞–∫–∞–∑ –Ω–∞ –¥–æ—Å—Ç–∞–≤–∫—É': None, '–í—ã–π—Ç–∏ —Å–æ —Å—Ç–∞–Ω—Ü–∏–∏': tunnels_choice,
                  '–û—Å–º–æ—Ç—Ä–µ—Ç—å –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å': User(update, context).inventory,
                  '–ê—Ä–µ–Ω–¥–æ–≤–∞—Ç—å –¥–æ–º–∏–∫ –Ω–∞ –Ω–æ—á—å: 35 –ø–∞—Ç—Ä–æ–Ω–æ–≤': sleep,
                  '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞—Ä—Ç—É': geocoder,

                  '–ü–ª–æ—â–∞–¥—å –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–∞ –ù–µ–≤—Å–∫–æ–≥–æ 1': tunnels,
                  '–ü–ª–æ—â–∞–¥—å –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–∞ –ù–µ–≤—Å–∫–æ–≥–æ 2': tunnels,
                  '–ù–æ–≤–æ—á–µ—Ä–∫–∞—Å—Å–∫–∞—è': tunnels,
                  '–ú–∞—è–∫–æ–≤—Å–∫–∞—è': tunnels,

                  '–î–∞': None, '–ò–¥—Ç–∏ –¥–∞–ª—å—à–µ': None}
    current_station = Station(update, context)
    current_station.init_station(update, context)
    choice = update.message.text
    try:
        activities[choice](update, context)
    except TypeError:
        pass


class Fight:
    def __init__(self):
        pass


def tunnels_choice(update, context):
    stations = {'–ù–æ–≤–æ—á–µ—Ä–∫–∞—Å—Å–∫–∞—è': markup_tunnel_novocherkasskaya,
                '–ü–ª–æ—â–∞–¥—å –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–∞ –ù–µ–≤—Å–∫–æ–≥–æ 1': markup_tunnel_alexander_nevsky_square_1,
                '–ü–ª–æ—â–∞–¥—å –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–∞ –ù–µ–≤—Å–∫–æ–≥–æ 2': markup_tunnel_alexander_nevsky_square_2,
                '–ú–∞—è–∫–æ–≤—Å–∫–∞—è': markup_tunnel_mayakovskaya}
    with open(f'main_hero{update.message.chat_id}.json', 'r') as f:
        data = json.load(f)
    update.message.reply_text("–ö—É–¥–∞ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–π—Ç–∏?", reply_markup=stations[data['station']])

    return 3


def tunnels(update, context):
    owners = {'–ù–æ–≤–æ—á–µ—Ä–∫–∞—Å—Å–∫–∞—è': '–ê–ª—å—è–Ω—Å –û–∫–∫–µ—Ä–≤–∏–ª—å', '–ü–ª–æ—â–∞–¥—å –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–∞ –ù–µ–≤—Å–∫–æ–≥–æ 1': '–ò–º–ø–µ—Ä–∏—è –í–µ–≥–∞–Ω',
              '–ü–ª–æ—â–∞–¥—å –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–∞ –ù–µ–≤—Å–∫–æ–≥–æ 2': '–ò–º–ø–µ—Ä–∏—è –í–µ–≥–∞–Ω', '–ú–∞—è–∫–æ–≤—Å–∫–∞—è': '–ù–µ–∑–∞–≤–∏—Å–∏–º–∞—è —Å—Ç–∞–Ω—Ü–∏—è'}
    update.message.reply_text("–í—ã –∏–¥—ë—Ç–µ –ø–æ —Ç–æ–Ω–Ω–µ–ª—è–º.")
    # random_tunnel = random.randint(0, 2)
    station_choice = update.message.text
    update.message.reply_text("–í—ã –±–µ–∑ –ø—Ä–æ–±–ª–µ–º –ø—Ä–æ—Ö–æ–¥–∏—Ç–µ —á–µ—Ä–µ–∑ —Ç–æ–Ω–Ω–µ–ª—å.", reply_markup=markup_tunnels_move)
    with open(f'main_hero{update.message.chat_id}.json', 'r') as f:
        data = json.load(f)
    with open(f'main_hero{update.message.chat_id}.json', 'w') as f:
        data['station'] = station_choice
        data['owner'] = owners[station_choice]
        f.write(json.dumps(data))
    return 2


def sleep(update, content):
    update.message.reply_text("–í–æ –≤—Ä–µ–º—è —Å–Ω–∞ –≤—ã –ø–æ–ª–Ω–æ—Å—Ç—å—é –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ —Å–≤–æ—ë –∑–¥–æ—Ä–æ–≤—å–µ.")
    with open(f'main_hero{update.message.chat_id}.json', 'r') as f:
        data = json.load(f)
    with open(f'main_hero{update.message.chat_id}.json', 'w') as f:
        data['health'] = 100
        data['bullets'] = data['bullets'] - 35
        f.write(json.dumps(data))


def geocoder(update, context):
    with open(f'main_hero{update.message.chat_id}.json', 'r') as f:
        data = json.load(f)
    api_requests = {'–ù–æ–≤–æ—á–µ—Ä–∫–∞—Å—Å–∫–∞—è': f"http://static-maps.yandex.ru/1.x/?ll=30.315721,59.971093&spn=0.5,0.5&l=map&pt="
                                      f"30.411310,59.929214,pm2rdl",
                    '–ü–ª–æ—â–∞–¥—å –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–∞ –ù–µ–≤—Å–∫–æ–≥–æ 1': f"http://static-maps.yandex.ru/1.x/?ll=30.315721,59.971093&spn="
                                                     f"0.5,0.5&l=map&pt=30.385229,59.924287,pm2rdl",
                    '–ü–ª–æ—â–∞–¥—å –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–∞ –ù–µ–≤—Å–∫–æ–≥–æ 2': f"http://static-maps.yandex.ru/1.x/?ll=30.315721,59.971093&spn="
                                                     f"0.5,0.5&l=map&pt=30.385229,59.924287,pm2rdl",
                    '–ú–∞—è–∫–æ–≤—Å–∫–∞—è': f"http://static-maps.yandex.ru/1.x/?ll=30.315721,59.971093&spn="
                                                     f"0.5,0.5&l=map&pt=30.355314,59.931386,pm2rdl"}
    context.bot.send_photo(
        update.message.chat_id,
        api_requests[data['station']],
    )
